services:
  api-1:
    image: nestjs-vehicle-register:latest
    expose:
      - "8080"
    environment:
      DATABASE_URL: postgresql://localhost:5432/vehicles?schema=public
      NODE_ENV: development
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 1G
    depends_on:
      - postgres

  api-2:
    image: nestjs-vehicle-register:latest
    expose:
      - "8080"
    environment:
      DATABASE_URL: postgresql://localhost:5432/vehicles?schema=public
      NODE_ENV: development
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 1G
    depends_on:
      - postgres

  api-3:
    image: nestjs-vehicle-register:latest
    expose:
      - "8080"
    environment:
      DATABASE_URL: postgresql://localhost:5432/vehicles?schema=public
      NODE_ENV: development
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 1G
    depends_on:
      - postgres

  api-4:
    image: nestjs-vehicle-register:latest
    expose:
      - "8080"
    environment:
      DATABASE_URL: postgresql://localhost:5432/vehicles?schema=public
      NODE_ENV: development
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 1G
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: vehicles
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: 3G
        reservations:
          cpus: "1.5"
          memory: 3G
    command: postgres -c 'shared_buffers=1GB' \
      -c 'work_mem=32MB' \
      -c 'maintenance_work_mem=512MB' \
      -c 'effective_cache_size=2.5GB' \
      -c 'max_connections=200' \
      -c 'synchronous_commit=off' \
      -c 'wal_compression=on'
    tmpfs:
      - /var/lib/postgresql/data:rw,noexec,nosuid,size=2G

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 0.5G
        reservations:
          cpus: "0.5"
          memory: 0.5G
    depends_on:
      - api-1
      - api-2
      - api-3
      - api-4
    tmpfs:
      - /var/cache/nginx:size=1024m
